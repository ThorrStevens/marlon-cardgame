{"version":3,"sources":["/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Thorr.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Icons/InfoIcon.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Illustrations/BusinessIllustration.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Illustrations/DesignIllustration.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Illustrations/TechnologyIllustration.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Cards/PlayableCard.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Cards/InspectableCard.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Screens/GameScreen.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Config/marlonCharacters.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Config/marlonEffects.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Config/marlonRows.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Config/marlonImages.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/MarlonLeague/Config/marlonCards.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/src/leagueRegistry.ts","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/App.tsx","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/web-build/register-service-worker.js","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Bart.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/BrechtB.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/BrechtDR.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Brian.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Davy.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Dieter.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Elke.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/FrederikC.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/FrederikDP.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Gerda.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Gert.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Jeroen.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Lien.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Lisette.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Manuel.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Mathieu.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Nico.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Niels.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Marieke.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Olga.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Robin.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/RubenC.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/RubenH.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Sebastian.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Sofie.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/ThomasC.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/ThomasML.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Tina.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Tuur.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Veerle.jpg","/Users/thorrstevens/Repos/Aetherspace/marlon-cardgame/assets/ppl/Vincent.jpg"],"names":["module","exports","InfoIcon","props","width","height","fill","rx","ry","fillRule","clipRule","d","BusinessIllustration","viewBox","aria-hidden","stroke","strokeWidth","DesignIllustration","TechnologyIllustation","isPhone","Dimensions","get","isWeb","Platform","OS","CARD_HEIGHT","CARD_WIDTH","borderRadiusCSS","css","fillParentCSS","StyledCard","styled","TouchableOpacity","CardSide","View","selected","FrontIconCSS","isEmoji","isValue","BaseValue","ValueText","Text","EffectIcon","StyledImage","Image","DraggableCard","animated","CardFront","PlayableCard","card","index","overflowFactor","shouldOverflow","useState","setSelected","translateX","useSpring","config","mass","tension","friction","style","transform","onPress","s","currentValue","effect","emojiKey","name","fontSize","textAlign","source","image","resizeMode","ratio","MIN_CARD_SCALE","CARD_SCALES","min","mid","max","InfoToggle","StyledCardInfo","PersonName","PersonRole","DividerLine","Subtitle","Summary","CardBack","CardInfo","InspectableCard","flipped","setFlipped","cardScale","setCardScale","showInfo","setShowInfo","scale","frontOpacity","backOpacity","frontRotateY","backRotateY","infoOpacity","scaleX","scaleY","onLongPress","f","opacity","perspective","rotateY","require","ILLUSTRATION_HEIGHT","ROW_WIDTH","GameContainer","GameField","GameRow","bgColor","isTopRow","isBottomRow","RowTotal","CardRow","isCardContainer","alignment","justify","GameScreen","collectableCards","technology","design","business","cards","setCards","sortedRows","useMemo","reduce","acc","rowKey","Object","entries","map","rowIndex","rowCards","arrIndex","totalBgColor","cardOverflow","length","rowTotal","cardsWithValues","baseValue","key","cardsInRow","cardID","allowedCards","values","filter","allowedRows","alreadyPlayed","includes","allowedInRow","newCard","Math","round","random","i","JSON","stringify","TechnologyIllustration","ROLES","freeze","BACK_END","teamID","title","possibleEffects","JAVASCRIPT","FRONT_END","UX_DESIGN","MARKETING_MANAGER","OFFICE_MANAGER","PROJECT_MANAGER","marlonCharacters","bart","fullName","startDate","companyRole","summary","nico","brian","robin","thorr","tuur","thomasML","isOutOfoffice","dieter","brechtB","frederikDP","manuel","mathieu","rubenC","rubenH","davy","brechtDR","lisette","sebastian","gert","niels","olga","frederikC","elke","gerda","lien","sofie","thomasC","veerle","vincent","marieke","tina","marlonEffects","emoji","description","isCard","recruited","prototyping","consultancy","planning","ROWS","BUSINESS","allowedRoles","DESIGN","TECHNOLOGY","marlonImages","jeroen","marlonCards","forEach","charKey","charCard","effectKey","startYear","Date","getFullYear","leagueKey","r","leagueRegistry","marlon","leagueID","leagueTitle","leagueDescription","characters","effects","rows","marlonRows","images","components","MarlonGameScreen","MarlonPlayableCard","MarlonInspectableCard","cardImages","leagues","AppContainer","App","league","isReady","setIsReady","loadedCards","setLoadedCards","cacheImages","useCallback","person","img","prefetch","Asset","fromModule","downloadAsync","loaded","loadAssetsAsync","a","async","imageAssets","Promise","all","console","log","AppLoading","startAsync","onFinish","onError","warn","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.896ddd60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Thorr.840171d2.jpg\";","import React from 'react';\nimport Svg, { Path, Rect } from 'react-native-svg';\n\nconst InfoIcon = props => (\n    <Svg width=\"24\" height=\"24\" {...props}>\n        <Rect width=\"24\" height=\"24\" fill=\"none\" rx=\"0\" ry=\"0\" />\n        <Path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M2 12C2 6.49 6.49 2 12 2C17.51 2 22 6.49 22 12C22 17.51 17.51 22 12 22C6.49 22 2 17.51 2 12ZM4 12C4 16.41 7.59 20 12 20C16.41 20 20 16.41 20 12C20 7.59 16.41 4 12 4C7.59 4 4 7.59 4 12ZM12 9C12.5523 9 13 8.55228 13 8C13 7.44772 12.5523 7 12 7C11.4477 7 11 7.44772 11 8C11 8.55228 11.4477 9 12 9ZM12 10C11.45 10 11 10.45 11 11V16C11 16.55 11.45 17 12 17C12.55 17 13 16.55 13 16V11C13 10.45 12.55 10 12 10Z\"\n            fill=\"#87CFFA\"\n        />\n    </Svg>\n);\n\nexport default InfoIcon;\n","import React from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\n\nconst BusinessIllustration = props => (\n    <Svg viewBox=\"0 0 400 400\" aria-hidden=\"true\" {...props}>\n        <G fill=\"none\" fillRule=\"evenodd\" stroke=\"#4F3A7E\" strokeWidth={10}>\n            <Path d=\"M68.939 102H322.5V16H68.939zm188.834 147.333v128.525H19.772v-164H155\" />\n            <Path d=\"M128.612 53.592c0 8.07-6.542 14.612-14.612 14.612s-14.613-6.542-14.613-14.612S105.93 38.98 114 38.98s14.612 6.542 14.612 14.612zm-3.458 11.404l14.024 14.024M73.167 353.333h-20a4 4 0 01-4-4v-23.667a4 4 0 014-4h20a4 4 0 014 4v23.668a4 4 0 01-4 4zm50 0h-20a4 4 0 01-4-4v-72.12a4 4 0 014-4h20a4 4 0 014 4v72.12a4 4 0 01-4 4zm50 0h-20a4 4 0 01-4-4v-52.596a4 4 0 014-4h20a4 4 0 014 4v52.596a4 4 0 01-4 4zm50 0h-20a4 4 0 01-4-4v-37.408a4 4 0 014-4h20a4 4 0 014 4v37.409a4 4 0 01-4 4zm147.482-104.667H166.106c-5.523 0-10-4.476-10-10v-75.965c0-5.521 4.477-10 10-10H370.65c5.522 0 10 4.479 10 10v75.966c0 5.523-4.478 10-10 10z\" />\n            <Path d=\"M212.333 218h-16.666c-5.523 0-10-4.477-10-10v-16.667c0-5.522 4.477-10 10-10h16.666c5.523 0 10 4.478 10 10V208c0 5.523-4.477 10-10 10zM247 188.333h31.667m-31.667 21h98.333\" />\n        </G>\n    </Svg>\n);\n\nexport default BusinessIllustration;\n","import React from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\n\nconst DesignIllustration = props => (\n    <Svg viewBox=\"0 0 400 400\" aria-hidden=\"true\" {...props}>\n        <G fill=\"none\" fillRule=\"evenodd\" stroke=\"#047391\" strokeWidth={10}>\n            <Path d=\"M248.215 354.51l-14.305-10.182a2.001 2.001 0 00-2.32 0l-14.305 10.182c-1.324.942-3.16-.004-3.16-1.63v-35.053h37.25v35.053c0 1.626-1.836 2.572-3.16 1.63z\" />\n            <Path d=\"M380.667 96.414v206.644c0 8.157-6.612 14.77-14.77 14.77H174.665c-8.156 0-14.769-6.613-14.769-14.77V69.983\" />\n            <Path d=\"M380.667 89.138V61.063c0-8.158-6.615-14.772-14.773-14.77l-182.375.06c-13.048.004-23.623 10.582-23.623 23.63v2.8c0 13.052 10.58 23.63 23.63 23.63h182.371c8.158 0 14.77 6.614 14.77 14.77v13.277\" />\n            <Path d=\"M191.138 71.673h174.76c8.157 0 14.769 6.612 14.769 14.769v22.757M81.983 184.597l-6.437 8.723a2 2 0 01-3.218 0l-6.437-8.723a10.002 10.002 0 01-1.954-5.938V18.999a8 8 0 018-8h4a8 8 0 018 8v159.66a9.995 9.995 0 01-1.954 5.938z\" />\n            <Path d=\"M63.938 33.334h30.061c5.523 0 10.002 4.476 10.002 10v48M75.969 385h-20c-22.092 0-40-17.909-40-40v-70c0-16.568 13.432-30 30-30h40c16.568 0 30 13.432 30 30v70c0 22.091-17.908 40-40 40zm-59.031-96.5H115M66.25 246v39.75\" />\n        </G>\n    </Svg>\n);\n\nexport default DesignIllustration;\n","import React from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\n\nconst TechnologyIllustation = props => (\n    <Svg viewBox=\"0 0 400 400\" aria-hidden=\"true\" {...props}>\n        <G fill=\"none\" fillRule=\"evenodd\" stroke=\"#038851\" strokeWidth={10}>\n            <Path d=\"M110.939 72H364.5V32H110.939zm0 65.5V72H364.5v228.918H154.869\" />\n            <Path d=\"M144.87 364.3H36.13c-5.523 0-10-4.476-10-10v-206c0-5.522 4.477-10 10-10h108.74c5.522 0 10 4.478 10 10v206c0 5.524-4.478 10-10 10zM127.5 51.5h11.75m10.25 0h11.75m10.25 0h11.75M26.13 171h128.74M26.13 325h128.738M80.5 344h20\" />\n        </G>\n    </Svg>\n);\n\nexport default TechnologyIllustation;\n","import React, { useState } from 'react';\nimport { View, Image, Text, TouchableOpacity, Dimensions, Platform } from 'react-native';\nimport styled, { css } from 'styled-components/native';\nimport { animated, useSpring } from 'react-spring/native';\nimport Emoji from 'react-native-emoji';\n\n/* --- Constants ------------------------------------------------------------------------------ */\n\nconst isPhone = Dimensions.get('window').width < 850;\nconst isWeb = Platform.OS === 'web';\n\nconst CARD_RATIO = 220 / 320;\nconst CARD_HEIGHT = Dimensions.get('window').height / 8;\nconst CARD_WIDTH = CARD_HEIGHT * CARD_RATIO;\n\n/* --- Styles ------------------------------------------------------------------------------ */\n\nconst borderRadiusCSS = css`\n    border-radius: 8px;\n`;\n\nconst fillParentCSS = css`\n    width: 100%;\n    height: 100%;\n`;\n\n// -- Styled Components --\n\nconst StyledCard = styled(TouchableOpacity)`\n    width: ${CARD_WIDTH}px;\n    height: ${CARD_HEIGHT}px;\n    ${borderRadiusCSS}\n    opacity: 1;\n    z-index: 100;\n`;\n\nconst CardSide = styled(View)`\n    position: absolute;\n    ${fillParentCSS}\n    ${borderRadiusCSS}\n    ${({ selected }) => (selected ? 'border: #C5C7CA solid 2px;' : '')}\n    overflow: hidden;\n    background-color: #fff;\n`;\n\nconst FrontIconCSS = css`\n    position: absolute;\n    display: flex;\n    left: ${isPhone ? '4px' : '5px'};\n    width: ${isPhone ? '20px' : '28px'};\n    height: ${isPhone ? '20px' : '28px'};\n    align-items: center;\n    justify-content: center;\n    border-radius: ${isPhone ? '10' : '14px'};\n    border-width: ${isPhone ? '2px' : '3px'};\n    ${({ isEmoji }) => (isEmoji && isWeb ? `padding-left: ${isPhone ? 3 : 4}px;` : '')}\n    ${({ isValue }) => (isValue && isWeb ? `padding-bottom: ${isPhone ? 0 : 2}px;` : '')}\n    z-index: 100;\n`;\n\nconst BaseValue = styled(View)`\n    ${FrontIconCSS}\n    top: 5px;\n    border-color: #4ca76c;\n    background-color: #3f3f46;\n`;\n\nconst ValueText = styled(Text)`\n    color: #57be7b;\n    font-weight: bold;\n    font-size: ${isPhone ? '10px' : '14px'};\n`;\n\nconst EffectIcon = styled(View)`\n    ${FrontIconCSS}\n    left: 5px;\n    bottom: 5px;\n    border-color: #4ca76c;\n    background-color: #3f3f46;\n`;\n\nconst StyledImage = styled(Image)`\n    ${fillParentCSS}\n`;\n\n// -- Animated Components --\n\nconst DraggableCard = animated(StyledCard);\nconst CardFront = animated(CardSide);\n\n/* --- <PlayableCard/> ------------------------------------------------------------------------------ */\n\nconst PlayableCard = props => {\n    // Props\n    const { card, index, overflowFactor, shouldOverflow } = props;\n\n    // State\n    const [selected, setSelected] = useState(false);\n\n    // Springs\n    const { translateX } = useSpring({\n        translateX: shouldOverflow ? `${index * (8 - CARD_WIDTH) * overflowFactor + 8}px` : `${index * 8}px`,\n        config: { mass: 5, tension: 500, friction: 80 },\n    });\n\n    // Render\n    return (\n        <DraggableCard style={{ transform: [{ translateX }] }} onPress={() => setSelected(s => !s)}>\n            <CardFront selected={selected}>\n                <BaseValue isValue>\n                    <ValueText>{card.currentValue}</ValueText>\n                </BaseValue>\n                {card?.effect?.emojiKey && (\n                    <EffectIcon isEmoji>\n                        <Emoji\n                            name={card.effect.emojiKey}\n                            style={{ fontSize: isPhone ? 11 : 17, textAlign: 'center' }}\n                        />\n                    </EffectIcon>\n                )}\n                <StyledImage source={card.image} resizeMode=\"cover\" />\n            </CardFront>\n        </DraggableCard>\n    );\n};\n\n/* --- Extentsions ------------------------------------------------------------------------------ */\n\nPlayableCard.ratio = CARD_RATIO;\nPlayableCard.width = CARD_WIDTH;\nPlayableCard.height = CARD_HEIGHT;\n\n/* --- Export ------------------------------------------------------------------------------ */\n\nexport default PlayableCard;\n","import React, { useState } from 'react';\nimport { View, Image, Text, TouchableOpacity, Dimensions } from 'react-native';\nimport styled, { css } from 'styled-components/native';\nimport { useSpring, animated } from 'react-spring/native';\nimport Emoji from 'react-native-emoji';\n// Components\nimport { InfoIcon } from '../../leagueRegistry';\n\n/* --- Constants ------------------------------------------------------------------------------ */\n\nconst perspective = 1000;\n\nconst { height } = Dimensions.get('window');\nconst ROW_HEIGHT = height / 8;\n\nconst MIN_CARD_SCALE = ROW_HEIGHT / 320;\nconst MID_CARD_SCALE = MIN_CARD_SCALE * 2;\nconst MAX_CARD_SCALE = 1;\n\nconst CARD_SCALES = {\n    min: MIN_CARD_SCALE,\n    mid: MID_CARD_SCALE,\n    max: MAX_CARD_SCALE,\n};\n\n/* --- Styles ------------------------------------------------------------------------------ */\n\nconst borderRadiusCSS = css`\n    border-radius: 14px;\n`;\n\nconst fillParentCSS = css`\n    width: 100%;\n    height: 100%;\n`;\n\n// -- Styled Components --\n\nconst StyledCard = styled(TouchableOpacity)`\n    width: 220px;\n    height: 320px;\n    ${borderRadiusCSS}\n    opacity: 1;\n    z-index: 100;\n`;\n\nconst CardSide = styled(View)`\n    position: absolute;\n    ${fillParentCSS}\n    ${borderRadiusCSS}\n    ${({ selected }) => (selected ? 'border: #C5C7CA solid 6px;' : '')}\n    overflow: hidden;\n    background-color: #fff;\n`;\n\nconst FrontIconCSS = css`\n    position: absolute;\n    left: 10px;\n    width: 70px;\n    height: 70px;\n    align-items: center;\n    justify-content: center;\n    border-radius: 35px;\n    border-width: 5px;\n    z-index: 100;\n`;\n\nconst BaseValue = styled(View)`\n    ${FrontIconCSS}\n    top: 10px;\n    border-color: #4ca76c;\n    background-color: #3f3f46;\n`;\n\nconst ValueText = styled(Text)`\n    color: #57be7b;\n    font-weight: bold;\n    font-size: 28px;\n`;\n\nconst EffectIcon = styled(View)`\n    ${FrontIconCSS}\n    bottom: 10px;\n    border-color: #4ca76c;\n    background-color: #3f3f46;\n`;\n\nconst StyledImage = styled(Image)`\n    ${fillParentCSS}\n`;\n\nconst InfoToggle = styled(TouchableOpacity)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    z-index: 100;\n`;\n\nconst StyledCardInfo = styled(View)`\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    ${fillParentCSS}\n    flex: 1;\n    align-items: center;\n    background-color: #ffffff;\n`;\n\nconst PersonName = styled(Text)`\n    margin-top: 32px;\n    font-size: 16px;\n    font-weight: bold;\n    color: #1f4b90;\n`;\n\nconst PersonRole = styled(Text)`\n    margin-top: 6px;\n    font-size: 8px;\n    font-weight: bold;\n    color: #87cffa;\n`;\n\nconst DividerLine = styled(View)`\n    margin: 20px 0px;\n    width: 35px;\n    height: 1px;\n    background-color: #87cffa;\n`;\n\nconst Subtitle = styled(Text)`\n    margin-bottom: 6px;\n    font-size: 8px;\n    font-weight: bold;\n    color: #333333;\n`;\n\nconst Summary = styled(Text)`\n    margin-bottom: 32px;\n    text-align: center;\n    font-size: 10px;\n    font-weight: bold;\n    line-height: 16px;\n    color: #1f4b90;\n`;\n\n// -- Animated Components --\n\nconst DraggableCard = animated(StyledCard);\nconst CardFront = animated(CardSide);\nconst CardBack = animated(CardSide);\nconst CardInfo = animated(StyledCardInfo);\n\n/* --- <InspectableCard/> ------------------------------------------------------------------------------ */\n\nconst InspectableCard = props => {\n    // State\n    const [selected, setSelected] = useState(false);\n    const [flipped, setFlipped] = useState(false);\n    const [cardScale, setCardScale] = useState('min');\n    const [showInfo, setShowInfo] = useState(false);\n\n    // Springs\n    const { scale } = useSpring({\n        scale: CARD_SCALES[cardScale],\n        config: { mass: 5, tension: 500, friction: 80 },\n    });\n    const { frontOpacity, backOpacity, frontRotateY, backRotateY } = useSpring({\n        frontOpacity: flipped ? -0.7 : 1,\n        backOpacity: flipped ? 1 : -0.7,\n        frontRotateY: `${flipped ? 180 : 0}deg`,\n        backRotateY: `${flipped ? 0 : -180}deg`,\n        config: { mass: 5, tension: 500, friction: 80 },\n    });\n    const { infoOpacity } = useSpring({ infoOpacity: showInfo ? 1 : 0 });\n\n    // Render\n    return (\n        <DraggableCard\n            style={{ transform: [{ scaleX: scale }, { scaleY: scale }] }}\n            onPress={() => setSelected(s => !flipped && !s)}\n            onLongPress={() => {\n                setFlipped(f => !f);\n                setCardScale(flipped ? 'min' : 'max');\n            }}\n        >\n            <CardFront\n                style={{\n                    opacity: frontOpacity,\n                    transform: [{ perspective }, { rotateY: frontRotateY }],\n                }}\n                selected={selected}\n            >\n                <BaseValue>\n                    <ValueText>10</ValueText>\n                </BaseValue>\n                <EffectIcon>\n                    <Emoji name=\"handshake\" style={{ fontSize: 40 }} />\n                </EffectIcon>\n                <StyledImage source={require('../../../assets/ppl/Thorr.jpg')} resizeMode=\"cover\" />\n            </CardFront>\n            <CardBack style={{ opacity: backOpacity, transform: [{ perspective }, { rotateY: backRotateY }] }}>\n                <InfoToggle onPress={() => setShowInfo(!showInfo)}>\n                    <InfoIcon />\n                </InfoToggle>\n                <CardInfo>\n                    <PersonName>Thorr Stevens</PersonName>\n                    <PersonRole>JavaScript developer</PersonRole>\n                    <DividerLine />\n                    <Subtitle>\n                        <Emoji name=\"handshake\" /> Pair Programming\n                    </Subtitle>\n                    <Summary>\n                        Double the values of all{'\\n'}\n                        team members in this row{'\\n'}\n                        who also have the{'\\n'}\n                        \"Pair Programming\" effect.\n                    </Summary>\n                    <Subtitle>\n                        <Emoji name=\"sparkle\" /> 10 current value\n                    </Subtitle>\n                    <Summary>\n                        3 base value{'\\n'}\n                        +1 value boost (2x){'\\n'}\n                        x2 value multiplier (1x)\n                    </Summary>\n                </CardInfo>\n                <CardInfo style={{ opacity: infoOpacity }}>\n                    <PersonName>Thorr Stevens</PersonName>\n                    <PersonRole>JavaScript developer</PersonRole>\n                    <DividerLine />\n                    <Subtitle>Je moet bij mij zijn voor</Subtitle>\n                    <Summary>Fratello serverside rendering</Summary>\n                    <Subtitle>Maar ook voor info over</Subtitle>\n                    <Summary>\n                        React hooks of componenten{'\\n'}\n                        React Native apps{'\\n'}\n                        Node & JavaScript{'\\n'}\n                        Marvel films{'\\n'}\n                        thunder & lightning\n                    </Summary>\n                </CardInfo>\n            </CardBack>\n        </DraggableCard>\n    );\n};\n\n/* --- Export ------------------------------------------------------------------------------ */\n\nexport default InspectableCard;\n","import React, { useState, useMemo } from 'react';\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\nimport styled from 'styled-components/native';\n// Components\nimport { BusinessIllustration, DesignIllustration, TechnologyIllustration } from '../../leagueRegistry';\n\n/* --- Contants ------------------------------------------------------------------------------ */\n\nconst isPhone = Dimensions.get('window').width < 850;\n\nconst ILLUSTRATION_HEIGHT = Dimensions.get('window').height / 9;\nconst ROW_WIDTH = Dimensions.get('window').width * 0.85;\n\n/* --- Styles ------------------------------------------------------------------------------ */\n\nconst GameContainer = styled(View)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    background-color: #87cffa;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst InspectionContainer = styled(View)`\n    display: flex;\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.9);\n    z-index: 200;\n`;\n\nconst GameField = styled(View)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 86%;\n    background-color: #fff;\n`;\n\nconst GameRow = styled(View)`\n    ${({ bgColor, isTopRow, isBottomRow }) => `\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n        width: 100%;\n        ${bgColor ? `background-color: ${bgColor};` : ''}\n        ${!isTopRow ? 'border-top-color: #FFFFFF;' : ''}\n        ${!isTopRow ? 'border-top-width: 2px;' : ''}\n        ${!isBottomRow ? 'border-bottom-color: #FFFFFF;' : ''}\n        ${!isBottomRow ? 'border-bottom-width: 2px;' : ''}\n    `}\n`;\n\nconst RowTotal = styled(View)`\n    position: absolute;\n    height: 100%;\n    width: 15%;\n    left: 0px;\n    align-items: center;\n    justify-content: center;\n    border-right-color: #ffffff;\n    border-right-width: 4px;\n    ${({ bgColor }) => (bgColor ? `background-color: ${bgColor};` : '')}\n`;\n\nRowTotal.Text = styled(Text)`\n    font-size: ${isPhone ? '15px' : '30px'};\n    font-weight: bold;\n    color: #ffffff;\n    text-align: center;\n`;\n\nconst CardRow = styled(TouchableOpacity)`\n    position: absolute;\n    flex: 1;\n    height: 100%;\n    width: 85%;\n    right: 0px;\n    ${({ isCardContainer }) => (isCardContainer ? 'flex-direction: row;' : '')}\n    z-index: ${({ isCardContainer }) => (isCardContainer ? 20 : 10)};\n    align-items: ${({ alignment }) => alignment || 'center'};\n    justify-content: ${({ justify }) => justify || 'center'};\n`;\n\n/* --- <GameScreen/> ------------------------------------------------------------------------------ */\n\nconst GameScreen = props => {\n    // Props\n    const { collectableCards, PlayableCard, InspectableCard } = props;\n\n    // State\n    const [cards, setCards] = useState({\n        'opponent-business': [],\n        'opponent-design': [],\n        'opponent-technology': [],\n        technology: [],\n        design: [],\n        business: [],\n    });\n\n    // -- Sort Rows --\n\n    const sortedRows = useMemo(() => {\n        const order = [\n            'opponent-business',\n            'opponent-design',\n            'opponent-technology',\n            'technology',\n            'design',\n            'business',\n        ];\n        return order.reduce((acc, rowKey) => ({ ...acc, [rowKey]: cards[rowKey] }), {});\n    }, [cards]);\n\n    // -- Render --\n\n    return (\n        <GameContainer>\n            {/*/}\n            <InspectionContainer>\n                <InspectableCard />\n            </InspectionContainer>\n            {/**/}\n            <GameField>\n                {Object.entries(sortedRows).map(([rowKey, rowCards], rowIndex) => {\n                    const arrIndex = rowIndex < 3 ? rowIndex : 5 - rowIndex;\n                    const bgColor = ['#715DA7', '#469CAC', '#57BE7B'][arrIndex];\n                    const totalBgColor = ['#635293', '#3D8997', '#4CA76C'][arrIndex];\n                    const cardOverflow = rowCards.length * PlayableCard.width - ROW_WIDTH + rowCards.length * 12;\n                    const shouldOverflow = cardOverflow > 0;\n                    const overflowFactor = cardOverflow / ROW_WIDTH > 0.5 ? 0.5 : cardOverflow / ROW_WIDTH;\n                    // Row Clickhandlers\n                    const onPress = () => {\n                        const cardsInRow = cards[rowKey].map(({ cardID }) => cardID);\n                        const allowedCards = Object.values(collectableCards).filter(({ cardID, allowedRows }) => {\n                            const alreadyPlayed = cardsInRow.includes(cardID);\n                            const allowedInRow = allowedRows.includes(rowKey);\n                            return !alreadyPlayed && allowedInRow;\n                        });\n                        const newCardIndex = Math.round(Math.random() * allowedCards.length);\n                        const newCard = allowedCards[newCardIndex];\n                        if (newCard) setCards({ ...cards, [rowKey]: [...rowCards, newCard] });\n                    };\n                    // Calculate row & card values\n                    let rowTotal = 0;\n                    const cardsWithValues = rowCards.map(card => {\n                        const currentValue = card.baseValue;\n                        rowTotal += currentValue;\n                        return { ...card, currentValue };\n                    });\n                    // Render row\n                    return (\n                        <GameRow key={rowKey} bgColor={bgColor} isTopRow={rowIndex === 0} isBottomRow={rowIndex === 5}>\n                            <RowTotal bgColor={totalBgColor}>\n                                <RowTotal.Text>{rowTotal}</RowTotal.Text>\n                            </RowTotal>\n                            <CardRow\n                                justify={shouldOverflow ? 'flex-start' : 'center'}\n                                onPress={onPress}\n                                isCardContainer\n                            >\n                                {cardsWithValues.map((card, i) => (\n                                    <PlayableCard\n                                        key={`${rowKey}-${JSON.stringify(card.cardID)}-${i}`}\n                                        index={i}\n                                        card={{ ...card }}\n                                        overflowFactor={overflowFactor}\n                                        shouldOverflow={shouldOverflow}\n                                    />\n                                ))}\n                            </CardRow>\n                            <CardRow alignment={rowIndex < 3 ? 'flex-start' : 'flex-end'}>\n                                {rowKey.includes('business') && (\n                                    <BusinessIllustration width={ILLUSTRATION_HEIGHT} height=\"66%\" />\n                                )}\n                                {rowKey.includes('design') && (\n                                    <DesignIllustration width={ILLUSTRATION_HEIGHT} height=\"66%\" />\n                                )}\n                                {rowKey.includes('technology') && (\n                                    <TechnologyIllustration width={ILLUSTRATION_HEIGHT} height=\"66%\" />\n                                )}\n                            </CardRow>\n                        </GameRow>\n                    );\n                })}\n            </GameField>\n        </GameContainer>\n    );\n};\n\n/* --- Export GameScreen ------------------------------------------------------------------------------ */\n\nexport default GameScreen;\n","/* --- Types ------------------------------------------------------------------------------ */\n\nexport type MarlonRoleType = {\n    teamID: 'be' | 'js' | 'fe' | 'ux' | 'mm' | 'om' | 'pm';\n    title: string;\n    allowedRows: string[];\n    possibleEffects: string[];\n};\n\nexport type MarlonRolesType = { [key: string]: MarlonRoleType };\n\nexport type MarlonCharacterType = MarlonRoleType & {\n    fullName: string;\n    startDate: string;\n    companyRole: string;\n    summary: string;\n    isOutOfOffice?: boolean;\n};\n\nexport type MarlonCharactersType = { [key: string]: MarlonCharacterType };\n\n/* --- Marlon League: Teams & Roles ------------------------------------------------------------------------------ */\n\nconst ROLES: MarlonRolesType = Object.freeze({\n    BACK_END: {\n        teamID: 'be',\n        title: 'PHP developer',\n        allowedRows: ['technology'],\n        possibleEffects: ['platinum-card', 'quick-learner', 'hacker-man', 'pair-programming'],\n    },\n    JAVASCRIPT: {\n        teamID: 'js',\n        title: 'Javascript developer',\n        allowedRows: ['technology'],\n        possibleEffects: ['platinum-card', 'quick-learner', 'hacker-man', 'pair-programming'],\n    },\n    FRONT_END: {\n        teamID: 'fe',\n        title: 'Front-End developer',\n        allowedRows: ['technology', 'design'],\n        possibleEffects: ['platinum-card', 'quick-learner', 'prototyping', 'pair-programming'],\n    },\n    UX_DESIGN: {\n        teamID: 'ux',\n        title: 'User experience designer',\n        allowedRows: ['design', 'business'],\n        possibleEffects: ['platinum-card', 'quick-learner', 'inspiration-boost', 'prototyping', 'consultancy'],\n    },\n    MARKETING_MANAGER: {\n        teamID: 'mm',\n        title: 'Online Marketing Manager',\n        allowedRows: ['business'],\n        possibleEffects: ['platinum-card', 'consultancy', 'inspiration-boost', 'online-marketing'],\n    },\n    OFFICE_MANAGER: {\n        teamID: 'om',\n        title: 'Office Manager',\n        allowedRows: ['business'],\n        possibleEffects: ['platinum-card', 'office-manager'],\n    },\n    PROJECT_MANAGER: {\n        teamID: 'pm',\n        title: 'Project Manager',\n        allowedRows: ['business'],\n        possibleEffects: ['platinum-card', 'planning', 'consultancy'],\n    },\n});\n\n/* --- Character Cards: People of Marlon -------------------------------------------------------------------- */\n\nconst marlonCharacters: MarlonCharactersType = Object.freeze({\n    // --- TODO ---\n    /*\n    jeroen: {\n        ...ROLES.BACK_END,\n        fullName: 'Jeroen Deviaene',\n    },\n    brent: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Brent ...',\n    },\n    */\n    // --- JavaScript Team ---\n    bart: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Bart Van Canegem',\n        title: 'Team Lead JavaScript',\n        possibleEffects: [...ROLES.JAVASCRIPT.possibleEffects, 'team-lead'],\n        startDate: '01/01/2009',\n        companyRole: `\n            vragen rond het\\n\n            JavaScript eco systeem\n        `,\n        summary: `\n            JS team gerelateerde vragen\\n\n            operations stuff (CI, Heroku, ...)\\n\n            GIT\\n\n            auto's & all things Toyota\\n\n            games & esports\\n\n            elektronica (3D printing, Arduino, ...)\n        `,\n    },\n    nico: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Nico Verkest',\n        startDate: '01/01/2015',\n        companyRole: 'JavaScript',\n        summary: `\n            React & React-Native\\n\n            2D game engines\\n\n            moestuinieren\\n\n            WebGL\n        `,\n    },\n    brian: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Brian Roels',\n        startDate: '01/01/2019',\n        companyRole: 'React, UI-implementatie',\n        summary: `\n            classificatie, objectdetectie\\n\n            Machine Learning\\n\n            vragen over slagwerk\\n\n            ska-punk, bigband, jazz\\n\n            hardrock & schlagers\\n\n            audiogerelateerde zaken\\n\n            mobiele apparaten\n        `,\n    },\n    robin: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Robin Kossi',\n        startDate: '01/01/2017',\n        companyRole: `\n            JavaScript development\\n\n            (React, Node.JS, CI integratie, ...)\n        `,\n        summary: `\n            JS typing (TS/Flow)\\n\n            Webpack black magic\\n\n            tabs > spaces\\n\n            Overwatch connoiseur\n        `,\n    },\n    thorr: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Thorr Stevens',\n        startDate: '01/01/2018',\n        companyRole: 'Fratello serverside rendering',\n        summary: `\n            React hooks of componenten\\n\n            React Native apps\\n\n            Node & JavaScript\\n\n            Marvel films\\n\n            thunder & lightning\n        `,\n    },\n    tuur: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Tuur Lievens',\n        startDate: '01/01/2019',\n        companyRole: `\n            Toyota retailer &\\n\n            car on display app\n        `,\n        summary: `\n            PC hardware\\n\n            DIY domotica\\n\n            Android apps\\n\n            VR / AR\\n\n            random weetjes\n        `,\n    },\n    thomasML: {\n        ...ROLES.JAVASCRIPT,\n        fullName: 'Thomas MacLean',\n        startDate: '01/01/2018',\n        isOutOfoffice: true,\n        possibleEffects: [...ROLES.JAVASCRIPT.possibleEffects, 'name-collector'],\n        companyRole: 'JavaScript/Node',\n        summary: `\n            Vue\\n\n            Svelte\\n\n            honden\n        `,\n    },\n    // --- PHP Team ---\n    dieter: {\n        ...ROLES.BACK_END,\n        fullName: 'Dieter Provoost',\n        title: 'Team Lead PHP',\n        startDate: '01/01/2012',\n        possibleEffects: [...ROLES.BACK_END.possibleEffects, 'team-lead'],\n        companyRole: 'PHP, serverconfiguratie en webshops',\n        summary: `\n            iets met 4411 keer parkeren\\n\n            toelichting bij karakter-\\n\n            stoornissen van collega's\\n\n            sfeerbeheer\\n\n            windsurfen\\n\n            pasta\n        `,\n    },\n    brechtB: {\n        ...ROLES.BACK_END,\n        fullName: 'Brecht Bonte',\n        startDate: '01/01/2011',\n        companyRole: 'Fratello gerelateerde backend zaken',\n        summary: `\n            PHPtorm pro-tips™️\\n\n            Karate\\n\n            Wing Chun\\n\n            hoe je een hond\\n\n            niet moet opvoeden\n        `,\n    },\n    frederikDP: {\n        ...ROLES.BACK_END,\n        fullName: 'Frederik De Paepe',\n        startDate: '01/01/2010',\n        companyRole: 'ontwikkeling in PHP',\n        summary: `\n            Fratello CMS\\n\n            Rusland en de Russische taal\\n\n            Node & JavaScript\\n\n            (koers)fietsen\n        `,\n    },\n    manuel: {\n        ...ROLES.BACK_END,\n        fullName: 'Manuel Heye',\n        startDate: '01/01/2016',\n        companyRole: 'PHP, Fratello, SMS-parkeren',\n        summary: `\n            cafés in Gent\\n\n            frietjes\\n\n            verbouwen met Roger\n        `,\n    },\n    mathieu: {\n        ...ROLES.BACK_END,\n        fullName: 'Mathieu Duffeler',\n        startDate: '01/01/2012',\n        companyRole: 'Daikin, VDAB, PHP',\n        summary: `\n            security\\n\n            pentesting\\n\n            Inspirational quotes\\n\n            Apex Legends\n        `,\n    },\n    rubenC: {\n        ...ROLES.BACK_END,\n        fullName: 'Ruben Colpaert',\n        startDate: '01/01/2019',\n        possibleEffects: [...ROLES.BACK_END.possibleEffects, 'name-collector'],\n        companyRole: 'PHP-ontwikkeling',\n        summary: `\n            how to be a nood at the company\\n\n            RPG en LARP\\n\n            boardgam410%@!? cat-typos\\n\n            metal (the music genre)\n        `,\n    },\n    rubenH: {\n        ...ROLES.BACK_END,\n        fullName: 'Ruben Haegeman',\n        startDate: '01/01/2016',\n        possibleEffects: [...ROLES.BACK_END.possibleEffects, 'name-collector'],\n        companyRole: 'vragen over PHP',\n        summary: `\n            MySql\\n\n            scouts(kampen)\\n\n            Light themes\n        `,\n    },\n    // --- Front-End Team ---\n    davy: {\n        ...ROLES.FRONT_END,\n        fullName: 'Davy ...',\n        title: 'Team Lead Front-End',\n        startDate: '01/01/2008',\n        possibleEffects: [...ROLES.FRONT_END.possibleEffects, 'consultancy', 'team-lead'],\n        companyRole: `\n            snelle toegankelijke en kick-ass\\n\n            Front-Ends voor je website of app\n        `,\n        summary: `\n            HTML, CSS & JS\\n\n            cargofietsen\\n\n            website performance\\n\n            technical SEO & Accessibility\\n\n            fotografie & video\\n\n            moestuinieren & ecologisch leven\n        `,\n    },\n    brechtDR: {\n        ...ROLES.FRONT_END,\n        fullName: 'Brecht De Ruyte',\n        startDate: '01/01/2016',\n        companyRole: `\n            vragen in verband met lay-out,\\n\n            animaties, performance,\\n\n            technische SEO en accessibility\n        `,\n        summary: `\n            BBQ\\n\n            Manga\\n\n            Japan\\n\n            fotografie\\n\n            games\n        `,\n    },\n    lisette: {\n        ...ROLES.FRONT_END,\n        fullName: 'Lisette Mazure',\n        startDate: '01/01/2019',\n        companyRole: `\n            the exciting side\\n\n            of Front-end\n        `,\n        summary: `\n            all HTML & CSS things\\n\n            accessibility\\n\n            Depeche Mode\\n\n            tennis\\n\n            make-up\n        `,\n    },\n    sebastian: {\n        ...ROLES.FRONT_END,\n        fullName: 'Sebastian Viaene',\n        startDate: '01/01/2014',\n        companyRole: `\n            Front-End gerelateerde zaken\\n\n            zoals HTML, CSS, DOM, ...\n        `,\n        summary: `\n            JavaScript\\n\n            browserskills\\n\n            performantie & toegankelijkheid\\n\n            indieweb\\n\n            straatfotografie\\n\n            bier\n        `,\n    },\n    // --- UX Design Team ---\n    gert: {\n        ...ROLES.UX_DESIGN,\n        fullName: 'Gert Dedeyne',\n        title: 'Team Lead Design',\n        startDate: '01/01/2011',\n        possibleEffects: [...ROLES.UX_DESIGN.possibleEffects, 'team-lead'],\n        companyRole: `\n            webdesign, prototypes\\n\n            en usability\n        `,\n        summary: `\n            beestjes groot en klein\\n\n            tekenen en knutselen\\n\n            electronica projecten\\n\n            robots\n        `,\n    },\n    niels: {\n        ...ROLES.UX_DESIGN,\n        fullName: 'Niels De Paepe',\n        allowedRows: ['design'],\n        title: 'Designer',\n        startDate: '01/01/2015',\n        companyRole: 'de facade van een website',\n        summary: `\n            webdesign\\n\n            grafish ontwerp\\n\n            Happy Monster Club\\n\n            Verkleinen van een logo en\\n\n            vergroten (als het echt moet)\\n\n            pixelneukerij\n        `,\n    },\n    olga: {\n        ...ROLES.UX_DESIGN,\n        fullName: 'Olga Maertens',\n        title: 'Analyst',\n        startDate: '01/01/2019',\n        companyRole: `\n            alles over analyse\\n\n            en prototypes\n        `,\n        summary: `\n            usability\\n\n            informatie-architectuur\\n\n            jazzpiano\\n\n            triviale taalweetjes\n        `,\n    },\n    // --- Project Management Team ---\n    frederikC: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Frederik Claerhout',\n        startDate: '01/01/2008',\n        title: 'CEO',\n        companyRole: `\n            een doordachte aanpak\\n\n            van je digitale business\n        `,\n        summary: `\n            e-commerce trends\\n\n            verzamelen van functionele vereisten\\n\n            web app development\\n\n            continuous testing\\n\n            project management\\n\n            Kaizen\\n\n            de Scoville chart\n        `,\n    },\n    elke: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Elke De Vleeschouwer',\n        startDate: '01/01/2012',\n        companyRole: 'Toyota gerelateerde vragen',\n        summary: `\n            planning\\n\n            project management\\n\n            Agile way of working\\n\n            Jira\\n\n            omnisport\\n\n            mindfullness\n        `,\n    },\n    gerda: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Gerda Cobbaert',\n        startDate: '01/01/2018',\n        companyRole: 'Daikin & Dockx Rental',\n        summary: `\n            great coffee\\n\n            nice places to visit\\n\n            ideas on how not to grow plants\\n\n            IKEA knowledge\n        `,\n    },\n    lien: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Lien Vermassen',\n        startDate: '01/01/2015',\n        companyRole: `\n            de ins en outs van\\n\n            het Fratello framework\n        `,\n        summary: `\n            project management\\n\n            roller derby\\n\n            rainbows & unicorns\\n\n            ABBA\n        `,\n    },\n    sofie: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Sofie Verschraegen',\n        startDate: '01/01/2019',\n        companyRole: `\n            het in goede banen\\n\n            leiden van projecten\n        `,\n        summary: `\n            communicatie en bemiddelen\\n\n            tussen Marlon en de klant\\n\n            inplannen van developers\\n\n            op restaurant gaan\\n\n            alternatieve muziekgenres\n        `,\n    },\n    thomasC: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Thomas Crepain',\n        startDate: '01/01/2015',\n        possibleEffects: [...ROLES.PROJECT_MANAGER.possibleEffects, 'name-collector'],\n        companyRole: `\n            de projecten die over parkeren\\n\n            of elektriciteit gaan\n        `,\n        summary: `\n            planning\\n\n            die *@#$%! filter in Jira\\n\n            dat *@#$%! dashboard in Jira\\n\n            koffie\\n\n            scouting\n        `,\n    },\n    veerle: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Veerle Van den Bulcke',\n        startDate: '01/01/2018',\n        companyRole: `\n            alle info over de projecten die\\n\n            ik in goede banen probeer te leiden,\\n\n            maar vooral voor Daim'kes\n        `,\n        summary: `\n            project management\\n\n            Padel\\n\n            pateekes & pralines\\n\n            pounding techno music\n        `,\n    },\n    vincent: {\n        ...ROLES.PROJECT_MANAGER,\n        fullName: 'Vincent Mouton',\n        title: 'Happiness Manager',\n        startDate: '01/01/2008',\n        possibleEffects: [...ROLES.PROJECT_MANAGER.possibleEffects, 'prototyping', 'office-manager'],\n        companyRole: `\n            prototypes, analyses\\n\n            en een goed gesprek\n        `,\n        summary: `\n            je e-mail en software accounts\\n\n            Confluence & Jira\\n\n            mijn VISA-kaart\\n\n            de Gantoise\\n\n            LEGO blokjes zoeken\n        `,\n    },\n    // --- Other ---\n    marieke: {\n        ...ROLES.OFFICE_MANAGER,\n        fullName: 'Marieke Vanderghote',\n        startDate: '01/01/2017',\n        isOutOfoffice: true,\n        companyRole: `\n            alles (behalve IT\\n\n            gerelateerde issues)\n        `,\n        summary: `\n            je loon\\n\n            het kopieertoestel\\n\n            roze post-its ipv groene\\n\n            een kapotte stoel\\n\n            een tekort aan koffiebonen\n        `,\n    },\n    tina: {\n        ...ROLES.MARKETING_MANAGER,\n        fullName: 'Tina Van der Heyden',\n        startDate: '01/01/2019',\n        companyRole: 'de cijfers achter een website',\n        summary: `\n            copywriting\\n\n            SEO/SEA\\n\n            social media campagnes\\n\n            cosplay\\n\n            snail mail\n        `,\n    },\n});\n\n/* --- Export Marlon League Characters ----------------------------------------------------------------- */\n\nexport default marlonCharacters;\n","/* --- Types ------------------------------------------------------------------------------ */\n\nexport type MarlonEffectType = {\n    name: string;\n    emoji: string;\n    emojiKey: string;\n    description: string;\n};\n\nexport type MarlonEffectsType = { [key: string]: MarlonEffectType };\n\n/* --- Card Effects ------------------------------------------------------------------------------ */\n\nconst marlonEffects: MarlonEffectsType = Object.freeze({\n    // -- Row & Special Effect Cards --\n    'remote-work': {\n        name: 'remote-work',\n        emoji: '🏡',\n        emojiKey: 'house_with_garden',\n        description: 'Return any player card on your side of the field back to your hand',\n        isCard: true,\n    },\n    recruited: {\n        name: 'recruited',\n        emoji: '👋',\n        emojiKey: 'wave',\n        description: 'Remove all cards with the highest value from both sides of the field',\n        isCard: true,\n    },\n    'pizza-time': {\n        name: 'pizza-time',\n        emoji: '🍕',\n        emojiKey: 'pizza',\n        description: 'Double the values of all cards on a row of choice',\n        isCard: true,\n    },\n    'wifi-down': {\n        name: 'wifi-down',\n        emoji: '🙅‍♂️',\n        emojiKey: 'no_good_man',\n        description: 'Reduce the base values of all cards in the TECHNOLOGY row to 1 on both sides of the field',\n        isCard: true,\n    },\n    'licence-expired': {\n        name: 'licence-expired',\n        emoji: '🔐',\n        emojiKey: 'closed_lock_with_key',\n        description: 'Reduce the base values of all cards in the DESIGN row to 1 on both sides of the field',\n        isCard: true,\n    },\n    'low-budget': {\n        name: 'low-budget',\n        emoji: '📉',\n        emojiKey: 'chart_with_downwards_trend',\n        description: 'Reduce the base values of all cards in the BUSINESS row to 1 on both sides of the field',\n        isCard: true,\n    },\n    'office-management': {\n        name: 'office-management',\n        emoji: '🛠',\n        emojiKey: 'hammer_and_wrench',\n        description: 'Remove all WIFI_DOWN, LICENCE_EXPIRED and LOW_BUDGET effects',\n        isCard: true,\n    },\n    // -- Player Card Effects --\n    'office-manager': {\n        name: 'office-manager',\n        emoji: '🛠',\n        emojiKey: 'hammer_and_wrench',\n        description: 'Spawn an OFFICE_MANAGEMENT row effect, clearing all WIFI_DOWN, LICENCE_EXPIRED & LOW_BUDGET',\n    },\n    'name-collector': {\n        name: 'name-collector',\n        emoji: '👥',\n        emojiKey: 'busts_in_silhouette',\n        description:\n            'Double the values of all cards on your side that share the same name (cumulative, incl. copies of this card)',\n    },\n    'team-lead': {\n        name: 'team-lead',\n        emoji: '🧙‍♂️',\n        emojiKey: 'mage',\n        description: 'Add +3 to all junior & +1 to all medior/senior marloni of this cards team',\n    },\n    'hacker-man': {\n        name: 'hacker-man',\n        emoji: '🤖',\n        emojiKey: 'robot_face',\n        description:\n            'If opponents TECHNOLOGY row >10, crash laptop of devs in that row with highest value, removing them from the field.',\n    },\n    'pair-programming': {\n        name: 'pair-programming',\n        emoji: '🤝',\n        emojiKey: 'handshake',\n        description: 'Double the values of all team members in this row who also have the PAIR_PROGRAMMING effect',\n    },\n    'quick-learner': {\n        name: 'quick-learner',\n        emoji: '👾',\n        emojiKey: 'space_invader',\n        description: 'Add +1 to this card for all team members in this row',\n    },\n    'inspiration-boost': {\n        name: 'inspiration-boost',\n        emoji: '💡',\n        emojiKey: 'bulb',\n        description: 'Add +1 to this card at the end of every turn until the round is finished',\n    },\n    prototyping: {\n        name: 'prototyping',\n        emoji: '🎛',\n        emojiKey: 'control_knobs',\n        description: 'Gain +1 for all JS & FE cards & add +1 to all JS & FE cards on your side of the field',\n    },\n    consultancy: {\n        name: 'consultancy',\n        emoji: '💁‍♂️',\n        emojiKey: 'information_desk_person',\n        description: \"Play card on opponent's side of field, but draw 2 cards from your deck to your hand\",\n    },\n    'online-marketing': {\n        name: 'online-marketing',\n        emoji: '📈',\n        emojiKey: 'chart_with_upwards_trend',\n        description: 'Gain +1 for every PM card & add +1 to every PM on your side of the field',\n    },\n    planning: {\n        name: 'planning',\n        emoji: '📅',\n        emojiKey: 'calendar',\n        description: \"Revive a player card from the 'Out of Office' / graveyard stack\",\n    },\n    // -- Special Card Effects --\n    'platinum-card': {\n        name: 'platinum-card',\n        emoji: '🌟',\n        emojiKey: 'star2',\n        description: 'Locks card at base value x2. Immune to any negative OR positive effects. Awarded rarely.',\n    },\n});\n\n/* --- Export Card Effects ------------------------------------------------------------------------------ */\n\nexport default marlonEffects;\n","/* --- Card Rows ------------------------------------------------------------------------------ */\n\nconst ROWS = Object.freeze({\n    BUSINESS: {\n        name: 'business',\n        description: 'Home to all PM / UX / OfficeManager / Marketing Manager cards',\n        allowedRoles: ['pm', 'ux', 'mm', 'om'],\n    },\n    DESIGN: {\n        name: 'design',\n        description: 'Home to all UX / FE cards',\n        allowedRoles: ['ux', 'fe', 'mm'],\n    },\n    TECHNOLOGY: {\n        name: 'technology',\n        description: 'Home to all FE / JS / BE cards',\n        allowedRoles: ['fe', 'js', 'be'],\n    },\n});\n\n/* --- Export Card Rows ------------------------------------------------------------------------------ */\n\nexport default ROWS;\n","/* --- Types ------------------------------------------------------------------------------ */\n\ntype CardImagesType = { [person: string]: any };\n\n/* --- Images ------------------------------------------------------------------------------ */\n\nconst marlonImages: CardImagesType = {\n    bart: require('../../../assets/ppl/Bart.jpg'),\n    brechtB: require('../../../assets/ppl/BrechtB.jpg'),\n    brechtDR: require('../../../assets/ppl/BrechtDR.jpg'),\n    brian: require('../../../assets/ppl/Brian.jpg'),\n    davy: require('../../../assets/ppl/Davy.jpg'),\n    dieter: require('../../../assets/ppl/Dieter.jpg'),\n    elke: require('../../../assets/ppl/Elke.jpg'),\n    frederikC: require('../../../assets/ppl/FrederikC.jpg'),\n    frederikDP: require('../../../assets/ppl/FrederikDP.jpg'),\n    gerda: require('../../../assets/ppl/Gerda.jpg'),\n    gert: require('../../../assets/ppl/Gert.jpg'),\n    jeroen: require('../../../assets/ppl/Jeroen.jpg'),\n    lien: require('../../../assets/ppl/Lien.jpg'),\n    lisette: require('../../../assets/ppl/Lisette.jpg'),\n    manuel: require('../../../assets/ppl/Manuel.jpg'),\n    mathieu: require('../../../assets/ppl/Mathieu.jpg'),\n    nico: require('../../../assets/ppl/Nico.jpg'),\n    niels: require('../../../assets/ppl/Niels.jpg'),\n    marieke: require('../../../assets/ppl/Marieke.jpg'),\n    olga: require('../../../assets/ppl/Olga.jpg'),\n    robin: require('../../../assets/ppl/Robin.jpg'),\n    rubenC: require('../../../assets/ppl/RubenC.jpg'),\n    rubenH: require('../../../assets/ppl/RubenH.jpg'),\n    sebastian: require('../../../assets/ppl/Sebastian.jpg'),\n    sofie: require('../../../assets/ppl/Sofie.jpg'),\n    thomasC: require('../../../assets/ppl/ThomasC.jpg'),\n    thomasML: require('../../../assets/ppl/ThomasML.jpg'),\n    thorr: require('../../../assets/ppl/Thorr.jpg'),\n    tina: require('../../../assets/ppl/Tina.jpg'),\n    tuur: require('../../../assets/ppl/Tuur.jpg'),\n    veerle: require('../../../assets/ppl/Veerle.jpg'),\n    vincent: require('../../../assets/ppl/Vincent.jpg'),\n};\n\n/* --- Export Card Images ------------------------------------------------------------------------------ */\n\nexport default marlonImages;\n","import marlonCharacters, { MarlonCharacterType } from './marlonCharacters';\nimport marlonEffects, { MarlonEffectType } from './marlonEffects';\nimport marlonImages from './marlonImages';\n\n/* --- Types ------------------------------------------------------------------------------ */\n\nexport type MarlonCardType = MarlonCharacterType & {\n    cardID: string;\n    charKey: string;\n    effectKey: string;\n    leagueKey: 'marlon';\n    baseValue: number;\n    image: any;\n    effect: MarlonEffectType;\n};\n\nexport type MarlonCardsType = { [cardID: string]: MarlonCardType };\n\n/* --- Marlon League Cards ------------------------------------------------------------------------------ */\n\nconst marlonCards: MarlonCardsType = {};\nObject.entries(marlonCharacters).forEach(([charKey, charCard]) => {\n    charCard.possibleEffects.forEach(effectKey => {\n        const cardID = `${charKey}-${effectKey}`;\n        const effect = marlonEffects[effectKey];\n        // Calculate Base Value\n        const startYear = new Date(charCard.startDate).getFullYear();\n        const baseValue = 1 + (new Date().getFullYear() - startYear);\n        // Create & Assign Card\n        const card: MarlonCardType = {\n            cardID,\n            charKey,\n            effectKey,\n            leagueKey: 'marlon',\n            baseValue: effectKey === 'platinum-card' ? baseValue * 2 : baseValue,\n            image: marlonImages[charKey],\n            ...charCard,\n            effect,\n        };\n        if (effectKey === 'consultancy') card.allowedRows = card.allowedRows.map(r => `opponent-${r}`);\n        marlonCards[cardID] = card;\n    });\n});\n\n/* --- Export Marlon League Cards -------------------------------------------------------------------------- */\n\nexport default marlonCards;\n","/* --- Marlon League ------------------------------------------------------------------------------ */\n\n// Icons\nexport { default as InfoIcon } from './MarlonLeague/Icons/InfoIcon';\n\n// Illustrations\nexport { default as BusinessIllustration } from './MarlonLeague/Illustrations/BusinessIllustration';\nexport { default as DesignIllustration } from './MarlonLeague/Illustrations/DesignIllustration';\nexport { default as TechnologyIllustration } from './MarlonLeague/Illustrations/TechnologyIllustration';\n\n// Cards\nimport MarlonPlayableCard from './MarlonLeague/Cards/PlayableCard';\nimport MarlonInspectableCard from './MarlonLeague/Cards/InspectableCard';\n\n// Screens\nimport MarlonGameScreen from './MarlonLeague/Screens/GameScreen';\n\n// Config\nimport marlonCharacters from './MarlonLeague/Config/marlonCharacters';\nimport marlonEffects from './MarlonLeague/Config/marlonEffects';\nimport marlonRows from './MarlonLeague/Config/marlonRows';\nimport marlonCards from './MarlonLeague/Config/marlonCards';\nimport marlonImages from './MarlonLeague/Config/marlonImages';\n\n/* --- Register Leagues ----------------------------------------------------------------------- */\n\nconst leagueRegistry = {\n    marlon: {\n        leagueID: 'marlon',\n        leagueTitle: 'Marlon League',\n        leagueDescription: `\n            Marlon combines Business, Design & Technology into solid results.\n            So play your People of Marlon cards into these rows to get the upper hand.\n        `,\n        config: {\n            characters: marlonCharacters,\n            effects: marlonEffects,\n            rows: marlonRows,\n        },\n        images: marlonImages,\n        collectableCards: marlonCards,\n        components: {\n            GameScreen: MarlonGameScreen,\n            PlayableCard: MarlonPlayableCard,\n            InspectableCard: MarlonInspectableCard,\n        },\n    },\n};\n\n/* --- Export League Registry ------------------------------------------------------------------- */\n\nexport default leagueRegistry;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { View, Image } from 'react-native';\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport styled from 'styled-components/native';\n// Components\nimport leagues from './src/leagueRegistry';\n\n/* --- Types ------------------------------------------------------------------------------ */\n\ntype CardImagesType = { [person: string]: any };\n\n/* --- Images ------------------------------------------------------------------------------ */\n\nlet cardImages: CardImagesType = {};\nObject.values(leagues).forEach(({ images }) => {\n    cardImages = { ...cardImages, ...images };\n});\n\n/* --- Styles ------------------------------------------------------------------------------ */\n\nconst AppContainer = styled(View)`\n    flex: 1;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    background-color: #87cffa;\n`;\n\n/* --- <App/> ------------------------------------------------------------------------------ */\n\nconst App = () => {\n    // State\n    const [league, setLeague] = useState('marlon');\n    const [isReady, setIsReady] = useState(false);\n    const [loadedCards, setLoadedCards] = useState([]);\n\n    // -- Assets --\n\n    const cacheImages = useCallback(images => {\n        return Object.entries(images).map(([person, img]) => {\n            // @ts-ignore\n            const image = typeof img === 'string' ? Image.prefetch(img) : Asset.fromModule(img).downloadAsync();\n            setLoadedCards(loaded => [...loaded, person]);\n            return img;\n        });\n    }, []);\n\n    const loadAssetsAsync = useCallback(async () => {\n        const imageAssets = cacheImages(cardImages);\n        await Promise.all([...imageAssets]);\n    }, []);\n\n    // -- Build Decks --\n\n    //const fullDeck = useMemo(() => {\n    //\n    //}, [loadedCards]);\n\n    // -- Render --\n\n    console.log({ loadedCards });\n\n    const { GameScreen, PlayableCard, InspectableCard } = leagues[league].components;\n\n    return isReady ? (\n        <AppContainer>\n            <GameScreen\n                collectableCards={leagues[league].collectableCards}\n                PlayableCard={PlayableCard}\n                InspectableCard={InspectableCard}\n            />\n        </AppContainer>\n    ) : (\n        <AppLoading startAsync={loadAssetsAsync} onFinish={() => setIsReady(true)} onError={console.warn} />\n    );\n};\n\n/* --- Export App ------------------------------------------------------------------------------ */\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/Bart.c755588a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BrechtB.1c598743.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BrechtDR.f8cdd65c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Brian.0749f24b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Davy.24f7adfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dieter.38953090.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Elke.1f0f4e95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FrederikC.acd14a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FrederikDP.b0334ae8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Gerda.a43d5a3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Gert.53ca84e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Jeroen.ba6a9575.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lien.fad814fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Lisette.18bcb07b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Manuel.947ff820.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mathieu.699fb167.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nico.648b6b8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Niels.3daaf491.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Marieke.9fe8a27a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Olga.4db5e90f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Robin.3cd3bd9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RubenC.9d27e1e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RubenH.e880df89.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sebastian.a71104f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sofie.4844e6ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ThomasC.cf6b46c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ThomasML.7051b14f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tina.c7af55f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tuur.fe7a5c88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Veerle.94627068.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Vincent.c0ed3ed0.jpg\";"],"sourceRoot":""}